name: Unified Daily Report Workflow

on:
  schedule:
    - cron: "0 8 * * *"  # Run at 8:00 AM UTC every day
  # For manual testing
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy yfinance tqdm

    - name: Run signal generator script
      id: run_script
      run: |
        cd $GITHUB_WORKSPACE
        python scripts/high_current.py > signal_output.txt
      continue-on-error: true

    # Set current date for all steps
    - name: Set current date
      id: set_date
      run: echo "TODAY_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

    # Process the signal with enhanced reporting
    - name: Process signals with enhanced report
      id: enhance_report
      run: |
        # Find the latest signal JSON file
        LATEST_JSON=$(find results/live_signals -type f -name "daily_signal_*.json" | sort -r | head -n 1)
        
        if [ -n "$LATEST_JSON" ]; then
          echo "Latest JSON file: $LATEST_JSON"
          echo "Generating enhanced report..."
          
          # Generate the enhanced report with signal tracking
          python enhanced_report.py "$LATEST_JSON" report.txt no
          
          if [ -f report.txt ] && [ -s report.txt ]; then
            echo "report_exists=true" >> $GITHUB_OUTPUT
            echo "report_not_empty=true" >> $GITHUB_OUTPUT
            echo "Enhanced report generated successfully."
            
            # Track signals automatically (only track overall signal)
            python auto_tracker.py --file "$LATEST_JSON"
            
            # Display report summary
            echo "Report summary:"
            head -n 10 report.txt
            echo "..."
          else
            echo "report_exists=false" >> $GITHUB_OUTPUT
            echo "report_not_empty=false" >> $GITHUB_OUTPUT
            echo "Failed to generate enhanced report."
          fi
        else
          echo "No JSON file found."
          echo "report_exists=false" >> $GITHUB_OUTPUT
          echo "report_not_empty=false" >> $GITHUB_OUTPUT
        fi

    # Primary email sending method using enhanced_report.py
    - name: Send email report using Python (Primary)
      if: steps.enhance_report.outputs.report_exists == 'true' && steps.enhance_report.outputs.report_not_empty == 'true'
      run: |
        echo "DEBUG: ---- Primary Python Email Step ----"
        echo "DEBUG: Current working directory: $(pwd)"
        echo "DEBUG: Listing files in current directory:"
        ls -la
        echo "DEBUG: Content of secrets file (myact.secrets) (from workflow root):"
        cat myact.secrets || echo "DEBUG: myact.secrets file not found at $(pwd)/myact.secrets or cat failed"
        echo "DEBUG: ---- Environment variables set by 'env:' block (should be from secrets) ----"
        echo "DEBUG: MAIL_HOST='$MAIL_HOST'"
        echo "DEBUG: MAIL_PORT='$MAIL_PORT'"
        echo "DEBUG: MAIL_USERNAME='$MAIL_USERNAME'"
        echo "DEBUG: MAIL_PASSWORD_SET_CHECK (non-empty is good): '${MAIL_PASSWORD:+SET}'" # Avoid printing password
        echo "DEBUG: ---- End of environment variables ----"
        echo "Sending email report using enhanced_report.py..."
        python enhanced_report.py email-only report.txt
      env:
        MAIL_HOST: ${{ secrets.MAIL_HOST }}
        MAIL_PORT: ${{ secrets.MAIL_PORT }}
        MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
        MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
        
    # Fallback email sending method using GitHub Action
    - name: Send email report using GitHub Action (Fallback)
      if: steps.enhance_report.outputs.report_exists == 'true' && steps.enhance_report.outputs.report_not_empty == 'true' && always() # Ensure this runs even if primary fails
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com # Hardcoded for Gmail
        server_port: 587 # Hardcoded for Gmail STARTTLS
        # 'secure' defaults to false for port 587, action should attempt STARTTLS
        username: ${{ secrets.MAIL_USERNAME }}
        password: ${{ secrets.MAIL_PASSWORD }}
        subject: Daily Trading Signal Report (Fallback Action Test) - ${{ env.TODAY_DATE }}
        body: file://report.txt
        to: katar.fhm@gmail.com
        from: Rojhak Azadi <${{ secrets.MAIL_USERNAME }}>

    # Archive artifacts for debugging
    - name: Archive report artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: reports-${{ env.TODAY_DATE }}
        path: |
          report.txt
          signal_output.txt
          results/live_signals/daily_signal_*.json
        retention-days: 7
